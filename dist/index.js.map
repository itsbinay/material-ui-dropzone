{"version":3,"file":"index.js","sources":["../src/helpers.js","../src/components/PreviewList.js","../src/components/SnackbarContentWrapper.js","../src/components/DropzoneAreaBase.js","../src/components/DropzoneArea.js","../src/components/DropzoneDialogBase.js","../src/components/DropzoneDialog.js"],"sourcesContent":["export function isImage(file) {\r\n    if (file.type.split('/')[0] === 'image') {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function convertBytesToMbsOrKbs(filesize) {\r\n    let size = '';\r\n    if (filesize >= 1048576) {\r\n        size = (filesize / 1048576) + ' megabytes';\r\n    } else if (filesize >= 1024) {\r\n        size = (filesize / 1024) + ' kilobytes';\r\n    } else {\r\n        size = filesize + ' bytes';\r\n    }\r\n    return size;\r\n}\r\n\r\nexport async function createFileFromUrl(url) {\r\n    const response = await fetch(url);\r\n    const data = await response.blob();\r\n    const metadata = {type: data.type};\r\n    const filename = url.replace(/\\?.+/, '').split('/').pop();\r\n    return new File([data], filename, metadata);\r\n}\r\n\r\nexport function readFile(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = (event) => {\r\n            resolve(event?.target?.result);\r\n        };\r\n        reader.onerror = (event) => {\r\n            reader.abort();\r\n            reject(event);\r\n        };\r\n        reader.readAsDataURL(file);\r\n    });\r\n}\r\n","import {Chip, Fab, Grid, Typography} from '@mui/material';\r\nimport {withStyles} from '@mui/styles';\r\nimport {Delete} from '@mui/icons-material';\r\nimport clsx from 'clsx';\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = ({palette, shape, spacing}) => ({\r\n    root: {},\r\n    imageContainer: {\r\n        position: 'relative',\r\n        zIndex: 10,\r\n        textAlign: 'center',\r\n        '&:hover $image': {\r\n            opacity: 0.3,\r\n        },\r\n        '&:hover $removeButton': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n    image: {\r\n        height: 100,\r\n        width: 'initial',\r\n        maxWidth: '100%',\r\n        color: palette.text.primary,\r\n        transition: 'all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms',\r\n        boxSizing: 'border-box',\r\n        boxShadow: 'rgba(0, 0, 0, 0.12) 0 1px 6px, rgba(0, 0, 0, 0.12) 0 1px 4px',\r\n        borderRadius: shape.borderRadius,\r\n        zIndex: 5,\r\n        opacity: 1,\r\n    },\r\n    removeButton: {\r\n        transition: '.5s ease',\r\n        position: 'absolute',\r\n        opacity: 0,\r\n        top: spacing(-1),\r\n        right: spacing(-1),\r\n        width: 40,\r\n        height: 40,\r\n        '&:focus': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n});\r\n\r\nfunction PreviewList({\r\n    fileObjects,\r\n    handleRemove,\r\n    showFileNames,\r\n    useChipsForPreview,\r\n    previewChipProps,\r\n    previewGridClasses,\r\n    previewGridProps,\r\n    classes,\r\n    getPreviewIcon,\r\n}) {\r\n    if (useChipsForPreview) {\r\n        return (\r\n            <Grid\r\n                spacing={1}\r\n                direction=\"row\"\r\n                {...previewGridProps.container}\r\n                container={true}\r\n                className={clsx(classes.root, previewGridClasses.container)}\r\n            >\r\n                {fileObjects.map((fileObject, i) => {\r\n                    return (\r\n                        <Grid\r\n                            {...previewGridProps.item}\r\n                            item={true}\r\n                            key={`${fileObject.file?.name ?? 'file'}-${i}`}\r\n                            className={classes.imageContainer}\r\n                        >\r\n                            <Chip\r\n                                variant=\"outlined\"\r\n                                {...previewChipProps}\r\n                                label={fileObject.file.name}\r\n                                onDelete={handleRemove(i)}\r\n                            />\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            spacing={8}\r\n            {...previewGridProps.container}\r\n            container={true}\r\n            className={clsx(classes.root, previewGridClasses.container)}\r\n        >\r\n            {fileObjects.map((fileObject, i) => {\r\n                return (\r\n                    <Grid\r\n                        xs={4}\r\n                        {...previewGridProps.item}\r\n                        item={true}\r\n                        key={`${fileObject.file?.name ?? 'file'}-${i}`}\r\n                        className={clsx(classes.imageContainer, previewGridClasses.item)}\r\n                    >\r\n                        {getPreviewIcon(fileObject, classes)}\r\n\r\n                        {showFileNames && (\r\n                            <Typography variant=\"body1\" component=\"p\">\r\n                                {fileObject.file.name}\r\n                            </Typography>\r\n                        )}\r\n\r\n                        <Fab\r\n                            onClick={handleRemove(i)}\r\n                            aria-label=\"Delete\"\r\n                            className={classes.removeButton}\r\n                        >\r\n                            <Delete />\r\n                        </Fab>\r\n                    </Grid>\r\n                );\r\n            })}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nPreviewList.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    fileObjects: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    getPreviewIcon: PropTypes.func.isRequired,\r\n    handleRemove: PropTypes.func.isRequired,\r\n    previewChipProps: PropTypes.object,\r\n    previewGridClasses: PropTypes.object,\r\n    previewGridProps: PropTypes.object,\r\n    showFileNames: PropTypes.bool,\r\n    useChipsForPreview: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(styles, {name: 'MuiDropzonePreviewList'})(PreviewList);\r\n","import {withStyles} from '@mui/styles';\r\nimport {IconButton, SnackbarContent} from '@mui/material';\r\nimport {Warning, Info, Error, Close, CheckCircle} from '@mui/icons-material';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nconst variantIcon = {\r\n    success: CheckCircle,\r\n    warning: Warning,\r\n    error: Error,\r\n    info: Info,\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    successAlert: {\r\n        backgroundColor: theme.palette.success.main,\r\n    },\r\n    errorAlert: {\r\n        backgroundColor: theme.palette.error.main,\r\n    },\r\n    infoAlert: {\r\n        backgroundColor: theme.palette.info.main,\r\n    },\r\n    warningAlert: {\r\n        backgroundColor: theme.palette.warning.main,\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& > svg': {\r\n            marginRight: theme.spacing(1),\r\n        },\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n        opacity: 0.9,\r\n    },\r\n    closeButton: {},\r\n});\r\n\r\nfunction SnackbarContentWrapper(props) {\r\n    const {classes, className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[`${variant}Alert`], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon className={classes.icon} />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={classes.closeButton}\r\n                    onClick={onClose}\r\n                >\r\n                    <Close className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nSnackbarContentWrapper.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport default withStyles(styles, {name: 'MuiDropzoneSnackbar'})(SnackbarContentWrapper);\r\n","import {Snackbar, Typography} from '@mui/material';\r\nimport {withStyles} from '@mui/styles';\r\nimport {AttachFile, CloudUpload} from '@mui/icons-material';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\nimport {Fragment} from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport {convertBytesToMbsOrKbs, isImage, readFile} from '../helpers';\r\nimport PreviewList from './PreviewList';\r\nimport SnackbarContentWrapper from './SnackbarContentWrapper';\r\n\r\nconst styles = ({palette, shape, spacing}) => ({\r\n    '@keyframes progress': {\r\n        '0%': {\r\n            backgroundPosition: '0 0',\r\n        },\r\n        '100%': {\r\n            backgroundPosition: '-70px 0',\r\n        },\r\n    },\r\n    root: {\r\n        position: 'relative',\r\n        width: '100%',\r\n        minHeight: '250px',\r\n        backgroundColor: 'white',\r\n        border: 'dashed',\r\n        borderColor: palette.divider,\r\n        borderRadius: shape.borderRadius,\r\n        boxSizing: 'border-box',\r\n        cursor: 'pointer',\r\n        overflow: 'hidden',\r\n    },\r\n    active: {\r\n        animation: '$progress 2s linear infinite !important',\r\n        // eslint-disable-next-line max-len\r\n        backgroundImage: `repeating-linear-gradient(-45deg, ${'white'}, ${'white'} 25px, ${palette.divider} 25px, ${palette.divider} 50px)`,\r\n        backgroundSize: '150% 100%',\r\n        border: 'solid',\r\n        borderColor: palette.primary.light,\r\n    },\r\n    invalid: {\r\n        // eslint-disable-next-line max-len\r\n        backgroundImage: `repeating-linear-gradient(-45deg, ${palette.error.light}, ${palette.error.light} 25px, ${palette.error.dark} 25px, ${palette.error.dark} 50px)`,\r\n        borderColor: palette.error.main,\r\n    },\r\n    textContainer: {\r\n        textAlign: 'center',\r\n    },\r\n    text: {\r\n        marginBottom: spacing(3),\r\n        marginTop: spacing(3),\r\n    },\r\n    icon: {\r\n        width: 51,\r\n        height: 51,\r\n        color: palette.text.primary,\r\n    },\r\n});\r\n\r\nconst defaultSnackbarAnchorOrigin = {\r\n    horizontal: 'left',\r\n    vertical: 'bottom',\r\n};\r\n\r\nconst defaultGetPreviewIcon = (fileObject, classes) => {\r\n    if (isImage(fileObject.file)) {\r\n        return (<img\r\n            className={classes.image}\r\n            role=\"presentation\"\r\n            src={fileObject.data}\r\n        />);\r\n    }\r\n\r\n    return <AttachFile className={classes.image} />;\r\n};\r\n\r\n/**\r\n * This components creates a Material-UI Dropzone, with previews and snackbar notifications.\r\n */\r\nclass DropzoneAreaBase extends React.PureComponent {\r\n    state = {\r\n        openSnackBar: false,\r\n        snackbarMessage: '',\r\n        snackbarVariant: 'success',\r\n    };\r\n\r\n    notifyAlert() {\r\n        const {onAlert} = this.props;\r\n        const {openSnackBar, snackbarMessage, snackbarVariant} = this.state;\r\n        if (openSnackBar && onAlert) {\r\n            onAlert(snackbarMessage, snackbarVariant);\r\n        }\r\n    }\r\n\r\n    handleDropAccepted = async(acceptedFiles, evt) => {\r\n        const {fileObjects, filesLimit, getFileAddedMessage, getFileLimitExceedMessage, onAdd, onDrop} = this.props;\r\n\r\n        if (filesLimit > 1 && fileObjects.length + acceptedFiles.length > filesLimit) {\r\n            this.setState({\r\n                openSnackBar: true,\r\n                snackbarMessage: getFileLimitExceedMessage(filesLimit),\r\n                snackbarVariant: 'error',\r\n            }, this.notifyAlert);\r\n            return;\r\n        }\r\n\r\n        // Notify Drop event\r\n        if (onDrop) {\r\n            onDrop(acceptedFiles, evt);\r\n        }\r\n\r\n        // Retrieve fileObjects data\r\n        const fileObjs = await Promise.all(\r\n            acceptedFiles.map(async(file) => {\r\n                const data = await readFile(file);\r\n                return {\r\n                    file,\r\n                    data,\r\n                };\r\n            })\r\n        );\r\n\r\n        // Notify added files\r\n        if (onAdd) {\r\n            onAdd(fileObjs);\r\n        }\r\n\r\n        // Display message\r\n        const message = fileObjs.reduce((msg, fileObj) => msg + getFileAddedMessage(fileObj.file.name), '');\r\n        this.setState({\r\n            openSnackBar: true,\r\n            snackbarMessage: message,\r\n            snackbarVariant: 'success',\r\n        }, this.notifyAlert);\r\n    }\r\n\r\n    handleDropRejected = (rejectedFiles, evt) => {\r\n        const {\r\n            acceptedFiles,\r\n            filesLimit,\r\n            fileObjects,\r\n            getDropRejectMessage,\r\n            getFileLimitExceedMessage,\r\n            maxFileSize,\r\n            onDropRejected,\r\n        } = this.props;\r\n\r\n        let message = '';\r\n        if (fileObjects.length + rejectedFiles.length > filesLimit) {\r\n            message = getFileLimitExceedMessage(filesLimit);\r\n        } else {\r\n            rejectedFiles.forEach((rejectedFile) => {\r\n                message = getDropRejectMessage(rejectedFile, acceptedFiles, maxFileSize);\r\n            });\r\n        }\r\n\r\n        if (onDropRejected) {\r\n            onDropRejected(rejectedFiles, evt);\r\n        }\r\n\r\n        this.setState({\r\n            openSnackBar: true,\r\n            snackbarMessage: message,\r\n            snackbarVariant: 'error',\r\n        }, this.notifyAlert);\r\n    }\r\n\r\n    handleRemove = (fileIndex) => (event) => {\r\n        event.stopPropagation();\r\n\r\n        const {fileObjects, getFileRemovedMessage, onDelete} = this.props;\r\n\r\n        // Find removed fileObject\r\n        const removedFileObj = fileObjects[fileIndex];\r\n\r\n        // Notify removed file\r\n        if (onDelete) {\r\n            onDelete(removedFileObj, fileIndex);\r\n        }\r\n\r\n        this.setState({\r\n            openSnackBar: true,\r\n            snackbarMessage: getFileRemovedMessage(removedFileObj.file.name),\r\n            snackbarVariant: 'info',\r\n        }, this.notifyAlert);\r\n    };\r\n\r\n    handleCloseSnackbar = () => {\r\n        this.setState({\r\n            openSnackBar: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            acceptedFiles,\r\n            alertSnackbarProps,\r\n            classes,\r\n            disableRejectionFeedback,\r\n            dropzoneClass,\r\n            dropzoneParagraphClass,\r\n            dropzoneParagraphClass2,\r\n            dropzoneProps,\r\n            dropzoneText,\r\n            dropzoneText2,\r\n            fileObjects,\r\n            filesLimit,\r\n            getPreviewIcon,\r\n            Icon,\r\n            inputProps,\r\n            maxFileSize,\r\n            previewChipProps,\r\n            previewGridClasses,\r\n            previewGridProps,\r\n            previewText,\r\n            showAlerts,\r\n            showFileNames,\r\n            showFileNamesInPreview,\r\n            showPreviews,\r\n            showPreviewsInDropzone,\r\n            useChipsForPreview,\r\n        } = this.props;\r\n        const {openSnackBar, snackbarMessage, snackbarVariant} = this.state;\r\n\r\n        const acceptFiles = acceptedFiles?.join(',');\r\n        const isMultiple = filesLimit > 1;\r\n        const previewsVisible = showPreviews && fileObjects.length > 0;\r\n        const previewsInDropzoneVisible = showPreviewsInDropzone && fileObjects.length > 0;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Dropzone\r\n                    {...dropzoneProps}\r\n                    accept={acceptFiles}\r\n                    onDropAccepted={this.handleDropAccepted}\r\n                    onDropRejected={this.handleDropRejected}\r\n                    maxSize={maxFileSize}\r\n                    multiple={isMultiple}\r\n                >\r\n                    {({getRootProps, getInputProps, isDragActive, isDragReject}) => (\r\n                        <div\r\n                            {...getRootProps({\r\n                                className: clsx(\r\n                                    classes.root,\r\n                                    dropzoneClass,\r\n                                    isDragActive && classes.active,\r\n                                    (!disableRejectionFeedback && isDragReject) && classes.invalid,\r\n                                ),\r\n                            })}\r\n                        >\r\n                            <input {...getInputProps(inputProps)} />\r\n\r\n                            <div className={classes.textContainer}>\r\n                                <Typography\r\n                                    variant=\"h5\"\r\n                                    component=\"p\"\r\n                                    className={clsx(classes.text, dropzoneParagraphClass)}\r\n                                >\r\n                                    {dropzoneText}\r\n                                </Typography>\r\n                                <Typography\r\n                                    variant=\"h5\"\r\n                                    component=\"p\"\r\n                                    className={clsx(classes.text, dropzoneParagraphClass2)}\r\n                                >\r\n                                    {dropzoneText2}\r\n                                </Typography>\r\n                                {Icon ? (\r\n                                    <Icon className={classes.icon} />\r\n                                ) : (\r\n                                    <CloudUpload className={classes.icon} />\r\n                                )}\r\n                            </div>\r\n\r\n                            {previewsInDropzoneVisible &&\r\n                                <PreviewList\r\n                                    fileObjects={fileObjects}\r\n                                    handleRemove={this.handleRemove}\r\n                                    getPreviewIcon={getPreviewIcon}\r\n                                    showFileNames={showFileNames}\r\n                                    useChipsForPreview={useChipsForPreview}\r\n                                    previewChipProps={previewChipProps}\r\n                                    previewGridClasses={previewGridClasses}\r\n                                    previewGridProps={previewGridProps}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    )}\r\n                </Dropzone>\r\n\r\n                {previewsVisible &&\r\n                    <Fragment>\r\n                        <Typography variant=\"subtitle1\" component=\"span\">\r\n                            {previewText}\r\n                        </Typography>\r\n\r\n                        <PreviewList\r\n                            fileObjects={fileObjects}\r\n                            handleRemove={this.handleRemove}\r\n                            getPreviewIcon={getPreviewIcon}\r\n                            showFileNames={showFileNamesInPreview}\r\n                            useChipsForPreview={useChipsForPreview}\r\n                            previewChipProps={previewChipProps}\r\n                            previewGridClasses={previewGridClasses}\r\n                            previewGridProps={previewGridProps}\r\n                        />\r\n                    </Fragment>\r\n                }\r\n\r\n                {((typeof showAlerts === 'boolean' && showAlerts) ||\r\n                    (Array.isArray(showAlerts) && showAlerts.includes(snackbarVariant))) &&\r\n                    <Snackbar\r\n                        anchorOrigin={defaultSnackbarAnchorOrigin}\r\n                        autoHideDuration={6000}\r\n                        {...alertSnackbarProps}\r\n                        open={openSnackBar}\r\n                        onClose={this.handleCloseSnackbar}\r\n                    >\r\n                        <SnackbarContentWrapper\r\n                            onClose={this.handleCloseSnackbar}\r\n                            variant={snackbarVariant}\r\n                            message={snackbarMessage}\r\n                        />\r\n                    </Snackbar>\r\n                }\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nDropzoneAreaBase.defaultProps = {\r\n    acceptedFiles: [],\r\n    filesLimit: 3,\r\n    fileObjects: [],\r\n    maxFileSize: 3000000,\r\n    dropzoneText: 'Drag and drop a file here or click',\r\n    previewText: 'Preview:',\r\n    disableRejectionFeedback: false,\r\n    showPreviews: false, // By default previews show up under in the dialog and inside in the standalone\r\n    showPreviewsInDropzone: true,\r\n    showFileNames: false,\r\n    showFileNamesInPreview: false,\r\n    useChipsForPreview: false,\r\n    previewChipProps: {},\r\n    previewGridClasses: {},\r\n    previewGridProps: {},\r\n    showAlerts: true,\r\n    alertSnackbarProps: {\r\n        anchorOrigin: {\r\n            horizontal: 'left',\r\n            vertical: 'bottom',\r\n        },\r\n        autoHideDuration: 6000,\r\n    },\r\n    getFileLimitExceedMessage: (filesLimit) => (`Maximum allowed number of files exceeded. Only ${filesLimit} allowed`),\r\n    getFileAddedMessage: (fileName) => (`File ${fileName} successfully added.`),\r\n    getPreviewIcon: defaultGetPreviewIcon,\r\n    getFileRemovedMessage: (fileName) => (`File ${fileName} removed.`),\r\n    getDropRejectMessage: (rejectedFile, acceptedFiles, maxFileSize) => {\r\n        let message = `File ${rejectedFile.name} was rejected. `;\r\n        if (!acceptedFiles.includes(rejectedFile.type)) {\r\n            message += 'File type not supported. ';\r\n        }\r\n        if (rejectedFile.size > maxFileSize) {\r\n            message += 'File is too big. Size limit is ' + convertBytesToMbsOrKbs(maxFileSize) + '. ';\r\n        }\r\n        return message;\r\n    },\r\n};\r\n\r\nexport const FileObjectShape = PropTypes.shape({\r\n    file: PropTypes.object,\r\n    data: PropTypes.any,\r\n});\r\n\r\nDropzoneAreaBase.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    /** A list of file types to accept.\r\n     * @see See [here](https://react-dropzone.js.org/#section-accepting-specific-file-types) for more details.\r\n     */\r\n    acceptedFiles: PropTypes.arrayOf(PropTypes.string),\r\n    /** Maximum number of files that can be loaded into the dropzone. */\r\n    filesLimit: PropTypes.number,\r\n    /** Icon to be displayed inside the dropzone area. */\r\n    Icon: PropTypes.elementType,\r\n    /** Currently loaded files. */\r\n    fileObjects: PropTypes.arrayOf(FileObjectShape),\r\n    /** Maximum file size (in bytes) that the dropzone will accept. */\r\n    maxFileSize: PropTypes.number,\r\n    /** Text inside the dropzone. */\r\n    dropzoneText: PropTypes.string,\r\n    /** Custom CSS class name for dropzone container. */\r\n    dropzoneClass: PropTypes.string,\r\n    /** Custom CSS class name for text inside the container. */\r\n    dropzoneParagraphClass: PropTypes.string,\r\n    dropzoneParagraphClass2: PropTypes.string,\r\n    /** Disable feedback effect when dropping rejected files. */\r\n    disableRejectionFeedback: PropTypes.bool,\r\n    /** Shows previews **BELOW** the dropzone. */\r\n    showPreviews: PropTypes.bool,\r\n    /** Shows preview **INSIDE** the dropzone area. */\r\n    showPreviewsInDropzone: PropTypes.bool,\r\n    /** Shows file name under the dropzone image. */\r\n    showFileNames: PropTypes.bool,\r\n    /** Shows file name under the image. */\r\n    showFileNamesInPreview: PropTypes.bool,\r\n    /** Uses deletable Material-UI Chip components to display file names. */\r\n    useChipsForPreview: PropTypes.bool,\r\n    /**\r\n     * Props to pass to the Material-UI Chip components.<br/>Requires `useChipsForPreview` prop to be `true`.\r\n     *\r\n     * @see See [Material-UI Chip](https://material-ui.com/api/chip/#props) for available values.\r\n     */\r\n    previewChipProps: PropTypes.object,\r\n    /**\r\n     * Custom CSS classNames for preview Grid components.<br/>\r\n     * Should be in the form {container: string, item: string, image: string}.\r\n     */\r\n    previewGridClasses: PropTypes.object,\r\n    /**\r\n     * Props to pass to the Material-UI Grid components.<br/>\r\n     * Should be in the form {container: GridProps, item: GridProps}.\r\n     *\r\n     * @see See [Material-UI Grid](https://material-ui.com/api/grid/#props) for available GridProps values.\r\n     */\r\n    previewGridProps: PropTypes.object,\r\n    /** The label for the file preview section. */\r\n    previewText: PropTypes.string,\r\n    /**\r\n     * Shows styled Material-UI Snackbar when files are dropped, deleted or rejected.\r\n     *\r\n     * - can be a boolean (\"global\" `true` or `false` for all alerts).\r\n     * - can be an array, with values 'error', 'info', 'success' to select to view only certain alerts:\r\n     *  - showAlerts={['error']} for only errors.\r\n     *  - showAlerts={['error', 'info']} for both errors and info.\r\n     *  - showAlerts={['error', 'success', 'info']} is same as showAlerts={true}.\r\n     *  - showAlerts={[]} is same as showAlerts={false}.\r\n     */\r\n    showAlerts: PropTypes.oneOfType([\r\n        PropTypes.bool,\r\n        PropTypes.arrayOf(PropTypes.oneOf(['error', 'success', 'info'])),\r\n    ]),\r\n    /**\r\n     * Props to pass to the Material-UI Snackbar components.<br/>Requires `showAlerts` prop to be `true`.\r\n     *\r\n     * @see See [Material-UI Snackbar](https://material-ui.com/api/snackbar/#props) for available values.\r\n     */\r\n    alertSnackbarProps: PropTypes.object,\r\n    /**\r\n     * Props to pass to the Dropzone component.\r\n     *\r\n     * @see See [Dropzone props](https://react-dropzone.js.org/#src) for available values.\r\n     */\r\n    dropzoneProps: PropTypes.object,\r\n    /**\r\n     * Attributes applied to the input element.\r\n     *\r\n     * @see See [MDN Input File attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Additional_attributes) for available values.\r\n     */\r\n    inputProps: PropTypes.object,\r\n    /**\r\n     * Get alert message to display when files limit is exceed.\r\n     *\r\n     * *Default*: \"Maximum allowed number of files exceeded. Only ${filesLimit} allowed\"\r\n     *\r\n     * @param {number} filesLimit The `filesLimit` currently set for the component.\r\n     */\r\n    getFileLimitExceedMessage: PropTypes.func,\r\n    /**\r\n     * Get alert message to display when a new file is added.\r\n     *\r\n     * *Default*: \"File ${fileName} successfully added.\"\r\n     *\r\n     * @param {string} fileName The newly added file name.\r\n     */\r\n    getFileAddedMessage: PropTypes.func,\r\n    /**\r\n     * Get alert message to display when a file is removed.\r\n     *\r\n     * *Default*: \"File ${fileName} removed.\"\r\n     *\r\n     * @param {string} fileName The name of the removed file.\r\n     */\r\n    getFileRemovedMessage: PropTypes.func,\r\n    /**\r\n     * Get alert message to display when a file is rejected onDrop.\r\n     *\r\n     * *Default*: \"File ${rejectedFile.name} was rejected.\"\r\n     *\r\n     * @param {Object} rejectedFile The file that got rejected\r\n     * @param {string[]} acceptedFiles The `acceptedFiles` prop currently set for the component\r\n     * @param {number} maxFileSize The `maxFileSize` prop currently set for the component\r\n     */\r\n    getDropRejectMessage: PropTypes.func,\r\n    /**\r\n     * A function which determines which icon to display for a file preview.\r\n     *\r\n     * *Default*: If its an image then displays a preview the image, otherwise it will display an attachment icon\r\n     *\r\n     * @param {FileObject} objectFile The file which the preview will belong to\r\n     * @param {Object} classes The classes for the file preview icon, in the default case we use the 'image' className.\r\n     */\r\n    getPreviewIcon: PropTypes.func,\r\n    /**\r\n     * Fired when new files are added to dropzone.\r\n     *\r\n     * @param {FileObject[]} newFiles The new files added to the dropzone.\r\n     */\r\n    onAdd: PropTypes.func,\r\n    /**\r\n     * Fired when a file is deleted from the previews panel.\r\n     *\r\n     * @param {FileObject} deletedFileObject The file that was removed.\r\n     * @param {number} index The index of the removed file object.\r\n     */\r\n    onDelete: PropTypes.func,\r\n    /**\r\n     * Fired when the user drops files into the dropzone.\r\n     *\r\n     * @param {File[]} droppedFiles All the files dropped into the dropzone.\r\n     * @param {Event} event The react-dropzone drop event.\r\n     */\r\n    onDrop: PropTypes.func,\r\n    /**\r\n     * Fired when a file is rejected because of wrong file type, size or goes beyond the filesLimit.\r\n     *\r\n     * @param {File[]} rejectedFiles All the rejected files.\r\n     * @param {Event} event The react-dropzone drop event.\r\n     */\r\n    onDropRejected: PropTypes.func,\r\n    /**\r\n     * Fired when an alert is triggered.\r\n     *\r\n     * @param {string} message Alert message.\r\n     * @param {string} variant One of \"error\", \"info\", \"success\".\r\n     */\r\n    onAlert: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles, {name: 'MuiDropzoneArea'})(DropzoneAreaBase);\r\n","import PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport {createFileFromUrl, readFile} from '../helpers';\r\n\r\nimport DropzoneAreaBase from './DropzoneAreaBase';\r\n\r\nconst splitDropzoneAreaProps = (props) => {\r\n    const {clearOnUnmount, initialFiles, onChange, onDelete, ...dropzoneAreaProps} = props;\r\n    return [{clearOnUnmount, initialFiles, onChange, onDelete}, dropzoneAreaProps];\r\n};\r\n\r\n/**\r\n * This components creates an uncontrolled Material-UI Dropzone, with previews and snackbar notifications.\r\n *\r\n * It supports all props of `DropzoneAreaBase` but keeps the files state internally.\r\n *\r\n * **Note** To listen to file changes use `onChange` event handler and notice that `onDelete` returns a `File` instance instead of `FileObject`.\r\n */\r\nclass DropzoneArea extends React.PureComponent {\r\n    state = {\r\n        fileObjects: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadInitialFiles();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {clearOnUnmount} = this.props;\r\n\r\n        if (clearOnUnmount) {\r\n            this.setState({\r\n                fileObjects: [],\r\n            }, this.notifyFileChange);\r\n        }\r\n    }\r\n\r\n    notifyFileChange = () => {\r\n        const {onChange} = this.props;\r\n        const {fileObjects} = this.state;\r\n\r\n        if (onChange) {\r\n            onChange(fileObjects.map((fileObject) => fileObject.file));\r\n        }\r\n    }\r\n\r\n    loadInitialFiles = async() => {\r\n        const {initialFiles} = this.props;\r\n        try {\r\n            const fileObjs = await Promise.all(\r\n                initialFiles.map(async(initialFile) => {\r\n                    let file;\r\n                    if (typeof initialFile === 'string' ) {\r\n                        file = await createFileFromUrl(initialFile);\r\n                    } else {\r\n                        file = initialFile;\r\n                    }\r\n                    const data = await readFile(file);\r\n\r\n                    return {\r\n                        file,\r\n                        data,\r\n                    };\r\n                })\r\n            );\r\n\r\n            this.setState((state) => ({\r\n                fileObjects: [].concat(\r\n                    state.fileObjects,\r\n                    fileObjs\r\n                ),\r\n            }), this.notifyFileChange);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    addFiles = async(newFileObjects) => {\r\n        const {filesLimit} = this.props;\r\n        // Update component state\r\n        this.setState((state) => {\r\n            // Handle a single file\r\n            if (filesLimit <= 1) {\r\n                return {\r\n                    fileObjects: [].concat(newFileObjects[0]),\r\n                };\r\n            }\r\n\r\n            // Handle multiple files\r\n            return {\r\n                fileObjects: [].concat(\r\n                    state.fileObjects,\r\n                    newFileObjects\r\n                ),\r\n            };\r\n        }, this.notifyFileChange);\r\n    }\r\n\r\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\r\n        event.stopPropagation();\r\n\r\n        const {onDelete} = this.props;\r\n        const {fileObjects} = this.state;\r\n\r\n        // Calculate remaining fileObjects array\r\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\r\n            return i !== removedFileObjIdx;\r\n        });\r\n\r\n        // Notify removed file\r\n        if (onDelete) {\r\n            onDelete(removedFileObj.file);\r\n        }\r\n\r\n        // Update local state\r\n        this.setState({\r\n            fileObjects: remainingFileObjs,\r\n        }, this.notifyFileChange);\r\n    }\r\n\r\n    render() {\r\n        const [, dropzoneAreaProps] = splitDropzoneAreaProps(this.props);\r\n        const {fileObjects} = this.state;\r\n\r\n        return (\r\n            <DropzoneAreaBase\r\n                {...dropzoneAreaProps}\r\n                fileObjects={fileObjects}\r\n                onAdd={this.addFiles}\r\n                onDelete={this.deleteFile}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nDropzoneArea.defaultProps = {\r\n    clearOnUnmount: true,\r\n    filesLimit: 3,\r\n    initialFiles: [],\r\n};\r\n\r\nDropzoneArea.propTypes = {\r\n    ...DropzoneAreaBase.propTypes,\r\n    /** Clear uploaded files when component is unmounted. */\r\n    clearOnUnmount: PropTypes.bool,\r\n    /** List containing File objects or URL strings.<br/>\r\n     * **Note:** Please take care of CORS.\r\n    */\r\n    initialFiles: PropTypes.arrayOf(\r\n        PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.any,\r\n        ])\r\n    ),\r\n    /** Maximum number of files that can be loaded into the dropzone. */\r\n    filesLimit: PropTypes.number,\r\n    /**\r\n     * Fired when the files inside dropzone change.\r\n     *\r\n     * @param {File[]} loadedFiles All the files currently loaded into the dropzone.\r\n     */\r\n    onChange: PropTypes.func,\r\n    /**\r\n     * Fired when a file is deleted from the previews panel.\r\n     *\r\n     * @param {File} deletedFile The file that was removed.\r\n     */\r\n    onDelete: PropTypes.func,\r\n};\r\n\r\nexport default DropzoneArea;\r\n","import {Button, Dialog, DialogActions, DialogContent, DialogTitle} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport DropzoneAreaBase from './DropzoneAreaBase';\r\n\r\n// Split props related to DropzoneDialog from DropzoneArea ones\r\nfunction splitDropzoneDialogProps(allProps) {\r\n    const {\r\n        cancelButtonText,\r\n        dialogProps,\r\n        dialogTitle,\r\n        fullWidth,\r\n        maxWidth,\r\n        onClose,\r\n        onSave,\r\n        open,\r\n        submitButtonText,\r\n        ...dropzoneAreaProps\r\n    } = allProps;\r\n\r\n    return [\r\n        {\r\n            cancelButtonText,\r\n            dialogProps,\r\n            dialogTitle,\r\n            fullWidth,\r\n            maxWidth,\r\n            onClose,\r\n            onSave,\r\n            open,\r\n            submitButtonText,\r\n        },\r\n        dropzoneAreaProps,\r\n    ];\r\n}\r\n\r\n/**\r\n * This component provides the DropzoneArea inside of a Material-UI Dialog.\r\n *\r\n * It supports all the Props and Methods from `DropzoneAreaBase`.\r\n */\r\nclass DropzoneDialogBase extends React.PureComponent {\r\n    render() {\r\n        const [dropzoneDialogProps, dropzoneAreaProps] = splitDropzoneDialogProps(this.props);\r\n        const {\r\n            cancelButtonText,\r\n            dialogProps,\r\n            dialogTitle,\r\n            fullWidth,\r\n            maxWidth,\r\n            onClose,\r\n            onSave,\r\n            open,\r\n            submitButtonText,\r\n        } = dropzoneDialogProps;\r\n\r\n        // Submit button state\r\n        const submitDisabled = dropzoneAreaProps.fileObjects.length === 0;\r\n\r\n        return (\r\n            <Dialog\r\n                {...dialogProps}\r\n                fullWidth={fullWidth}\r\n                maxWidth={maxWidth}\r\n                onClose={onClose}\r\n                open={open}\r\n            >\r\n                <DialogTitle>{dialogTitle}</DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <DropzoneAreaBase\r\n                        {...dropzoneAreaProps}\r\n                    />\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        onClick={onClose}\r\n                    >\r\n                        {cancelButtonText}\r\n                    </Button>\r\n\r\n                    <Button\r\n                        color=\"primary\"\r\n                        disabled={submitDisabled}\r\n                        onClick={onSave}\r\n                    >\r\n                        {submitButtonText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nDropzoneDialogBase.defaultProps = {\r\n    open: false,\r\n    dialogTitle: 'Upload file',\r\n    dialogProps: {},\r\n    fullWidth: true,\r\n    maxWidth: 'sm',\r\n    cancelButtonText: 'Cancel',\r\n    submitButtonText: 'Submit',\r\n    showPreviews: true,\r\n    showPreviewsInDropzone: false,\r\n    showFileNamesInPreview: true,\r\n};\r\n\r\nDropzoneDialogBase.propTypes = {\r\n    ...DropzoneAreaBase.propTypes,\r\n    /** Sets whether the dialog is open or closed. */\r\n    open: PropTypes.bool,\r\n    /** The Dialog title. */\r\n    dialogTitle: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.element,\r\n    ]),\r\n    /**\r\n     * Props to pass to the Material-UI Dialog components.\r\n     * @see See [Material-UI Dialog](https://material-ui.com/api/dialog/#props) for available values.\r\n     */\r\n    dialogProps: PropTypes.object,\r\n    /**\r\n     * If `true`, the dialog stretches to `maxWidth`.<br/>\r\n     * Notice that the dialog width grow is limited by the default margin.\r\n     */\r\n    fullWidth: PropTypes.bool,\r\n    /**\r\n     * Determine the max-width of the dialog. The dialog width grows with the size of the screen.<br/>\r\n     * Set to `false` to disable `maxWidth`.\r\n     */\r\n    maxWidth: PropTypes.string,\r\n    /** Cancel button text in dialog. */\r\n    cancelButtonText: PropTypes.string,\r\n    /** Submit button text in dialog. */\r\n    submitButtonText: PropTypes.string,\r\n    /**\r\n     * Fired when the modal is closed.\r\n     *\r\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\r\n     */\r\n    onClose: PropTypes.func,\r\n    /**\r\n     * Fired when the user clicks the Submit button.\r\n     *\r\n     * @param {SyntheticEvent} event The react `SyntheticEvent`\r\n     */\r\n    onSave: PropTypes.func,\r\n    /**\r\n     * Shows previews **BELOW** the dropzone.<br/>\r\n     * **Note:** By default previews show up under in the Dialog and inside in the standalone.\r\n     */\r\n    showPreviews: PropTypes.bool,\r\n    /** Shows preview **INSIDE** the dropzone area. */\r\n    showPreviewsInDropzone: PropTypes.bool,\r\n    /** Shows file name under the image. */\r\n    showFileNamesInPreview: PropTypes.bool,\r\n};\r\n\r\nexport default DropzoneDialogBase;\r\n","import PropTypes from 'prop-types';\r\nimport * as React from 'react';\r\n\r\nimport {createFileFromUrl, readFile} from '../helpers';\r\n\r\nimport DropzoneDialogBase from './DropzoneDialogBase';\r\n\r\n\r\n/**\r\n * This component provides an uncontrolled version of the DropzoneDialogBase component.\r\n *\r\n * It supports all the Props and Methods from `DropzoneDialogBase` but keeps the files state internally.\r\n *\r\n * **Note** The `onSave` handler also returns `File[]` with all the accepted files.\r\n */\r\nclass DropzoneDialog extends React.PureComponent {\r\n    state = {\r\n        fileObjects: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadInitialFiles();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {clearOnUnmount} = this.props;\r\n\r\n        if (clearOnUnmount) {\r\n            this.setState({\r\n                fileObjects: [],\r\n            }, this.notifyFileChange);\r\n        }\r\n    }\r\n\r\n    notifyFileChange = () => {\r\n        const {onChange} = this.props;\r\n        const {fileObjects} = this.state;\r\n\r\n        if (onChange) {\r\n            onChange(fileObjects.map((fileObject) => fileObject.file));\r\n        }\r\n    }\r\n\r\n    loadInitialFiles = async() => {\r\n        const {initialFiles} = this.props;\r\n        try {\r\n            const fileObjs = await Promise.all(\r\n                initialFiles.map(async(initialFile) => {\r\n                    let file;\r\n                    if (typeof initialFile === 'string' ) {\r\n                        file = await createFileFromUrl(initialFile);\r\n                    } else {\r\n                        file = initialFile;\r\n                    }\r\n                    const data = await readFile(file);\r\n\r\n                    return {\r\n                        file,\r\n                        data,\r\n                    };\r\n                })\r\n            );\r\n\r\n            this.setState((state) => ({\r\n                fileObjects: [].concat(\r\n                    state.fileObjects,\r\n                    fileObjs\r\n                ),\r\n            }), this.notifyFileChange);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    addFiles = async(newFileObjects) => {\r\n        const {filesLimit} = this.props;\r\n        // Update component state\r\n        this.setState((state) => {\r\n            // Handle a single file\r\n            if (filesLimit <= 1) {\r\n                return {\r\n                    fileObjects: [].concat(newFileObjects[0]),\r\n                };\r\n            }\r\n\r\n            // Handle multiple files\r\n            return {\r\n                fileObjects: [].concat(\r\n                    state.fileObjects,\r\n                    newFileObjects\r\n                ),\r\n            };\r\n        }, this.notifyFileChange);\r\n    }\r\n\r\n    deleteFile = (removedFileObj, removedFileObjIdx) => {\r\n        event.stopPropagation();\r\n\r\n        const {onDelete} = this.props;\r\n        const {fileObjects} = this.state;\r\n\r\n        // Calculate remaining fileObjects array\r\n        const remainingFileObjs = fileObjects.filter((fileObject, i) => {\r\n            return i !== removedFileObjIdx;\r\n        });\r\n\r\n        // Notify removed file\r\n        if (onDelete) {\r\n            onDelete(removedFileObj.file);\r\n        }\r\n\r\n        // Update local state\r\n        this.setState({\r\n            fileObjects: remainingFileObjs,\r\n        }, this.notifyFileChange);\r\n    }\r\n\r\n    handleClose = (evt) => {\r\n        const {clearOnUnmount, onClose} = this.props;\r\n\r\n        if (onClose) {\r\n            onClose(evt);\r\n        }\r\n\r\n        if (clearOnUnmount) {\r\n            this.setState({\r\n                fileObjects: [],\r\n            }, this.notifyFileChange);\r\n        }\r\n    }\r\n\r\n    handleSave = (evt) => {\r\n        const {clearOnUnmount, onSave} = this.props;\r\n        const {fileObjects} = this.state;\r\n\r\n        if (onSave) {\r\n            onSave(fileObjects.map((fileObject) => fileObject.file), evt);\r\n        }\r\n\r\n        if (clearOnUnmount) {\r\n            this.setState({\r\n                fileObjects: [],\r\n            }, this.notifyFileChange);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {fileObjects} = this.state;\r\n\r\n        return (\r\n            <DropzoneDialogBase\r\n                {...this.props}\r\n                fileObjects={fileObjects}\r\n                onAdd={this.addFiles}\r\n                onDelete={this.deleteFile}\r\n                onClose={this.handleClose}\r\n                onSave={this.handleSave}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nDropzoneDialog.defaultProps = {\r\n    clearOnUnmount: true,\r\n    filesLimit: 3,\r\n    initialFiles: [],\r\n};\r\n\r\nDropzoneDialog.propTypes = {\r\n    ...DropzoneDialogBase.propTypes,\r\n    /** Clear uploaded files when component is unmounted. */\r\n    clearOnUnmount: PropTypes.bool,\r\n    /** Maximum number of files that can be loaded into the dropzone. */\r\n    filesLimit: PropTypes.number,\r\n    /** List containing File objects or URL strings.<br/>\r\n     * **Note:** Please take care of CORS.\r\n    */\r\n    initialFiles: PropTypes.arrayOf(\r\n        PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.any,\r\n        ])\r\n    ),\r\n    /**\r\n     * Fired when the user clicks the Submit button.\r\n     *\r\n     * @param {File[]} files All the files currently inside the Dropzone.\r\n     * @param {SyntheticEvent} event The react `SyntheticEvent`.\r\n     */\r\n    onSave: PropTypes.func,\r\n};\r\n\r\nexport default DropzoneDialog;\r\n"],"names":["isImage","file","type","split","convertBytesToMbsOrKbs","filesize","size","createFileFromUrl","url","fetch","response","blob","data","metadata","filename","replace","pop","File","readFile","Promise","resolve","reject","reader","FileReader","onload","event","target","result","onerror","abort","readAsDataURL","styles","palette","shape","spacing","root","imageContainer","position","zIndex","textAlign","opacity","image","height","width","maxWidth","color","text","primary","transition","boxSizing","boxShadow","borderRadius","removeButton","top","right","React.createElement","Delete","PreviewList","fileObjects","handleRemove","showFileNames","useChipsForPreview","previewChipProps","previewGridClasses","previewGridProps","classes","getPreviewIcon","Grid","container","clsx","map","fileObject","i","item","name","Chip","Typography","Fab","propTypes","PropTypes","object","isRequired","arrayOf","func","bool","withStyles","variantIcon","success","CheckCircle","warning","Warning","error","Error","info","Info","theme","successAlert","backgroundColor","main","errorAlert","infoAlert","warningAlert","message","display","alignItems","marginRight","icon","fontSize","closeButton","SnackbarContentWrapper","props","className","onClose","variant","other","Icon","SnackbarContent","IconButton","Close","string","node","oneOf","backgroundPosition","minHeight","border","borderColor","divider","cursor","overflow","active","animation","backgroundImage","backgroundSize","light","invalid","dark","textContainer","marginBottom","marginTop","defaultSnackbarAnchorOrigin","horizontal","vertical","defaultGetPreviewIcon","AttachFile","DropzoneAreaBase","state","openSnackBar","snackbarMessage","snackbarVariant","handleDropAccepted","acceptedFiles","evt","filesLimit","getFileAddedMessage","getFileLimitExceedMessage","onAdd","onDrop","length","setState","notifyAlert","all","fileObjs","reduce","msg","fileObj","handleDropRejected","rejectedFiles","getDropRejectMessage","maxFileSize","onDropRejected","forEach","rejectedFile","fileIndex","stopPropagation","getFileRemovedMessage","onDelete","removedFileObj","handleCloseSnackbar","onAlert","alertSnackbarProps","disableRejectionFeedback","dropzoneClass","dropzoneParagraphClass","dropzoneParagraphClass2","dropzoneProps","dropzoneText","dropzoneText2","inputProps","previewText","showAlerts","showFileNamesInPreview","showPreviews","showPreviewsInDropzone","acceptFiles","join","isMultiple","previewsVisible","previewsInDropzoneVisible","Fragment","getRootProps","getInputProps","isDragActive","isDragReject","CloudUpload","Array","isArray","includes","Snackbar","React","defaultProps","anchorOrigin","autoHideDuration","fileName","FileObjectShape","any","number","elementType","oneOfType","splitDropzoneAreaProps","clearOnUnmount","initialFiles","onChange","dropzoneAreaProps","DropzoneArea","notifyFileChange","loadInitialFiles","initialFile","concat","console","log","addFiles","newFileObjects","deleteFile","removedFileObjIdx","remainingFileObjs","filter","splitDropzoneDialogProps","allProps","cancelButtonText","dialogProps","dialogTitle","fullWidth","onSave","open","submitButtonText","DropzoneDialogBase","dropzoneDialogProps","submitDisabled","Dialog","DialogTitle","DialogContent","DialogActions","Button","element","DropzoneDialog","handleClose","handleSave"],"mappings":"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"}